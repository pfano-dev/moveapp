{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport styles from \"./styles\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { Bubble, GiftedChat, Send } from 'react-native-gifted-chat';\nimport Iconi from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar myIconio = _jsx(Iconi, {\n  name: \"send-circle\",\n  size: 32,\n  color: \"#263238\"\n});\n\nvar Inbox = function Inbox() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  useEffect(function () {\n    setMessages([{\n      _id: 1,\n      text: 'good morning',\n      createdAt: new Date(),\n      user: {\n        _id: 2,\n        name: 'React Native',\n        avatar: 'https://placeimg.com/140/140/any'\n      }\n    }, {\n      _id: 2,\n      text: 'hellow morning',\n      createdAt: new Date(),\n      user: {\n        _id: 1,\n        name: 'React Native',\n        avatar: 'https://placeimg.com/140/140/any'\n      }\n    }]);\n  }, []);\n  var route = useRoute();\n  var data = route.params;\n  var dat = data.image;\n\n  var _onSend = useCallback(function () {\n    var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    setMessages(function (previousMessages) {\n      return GiftedChat.append(previousMessages, messages);\n    });\n  }, []);\n\n  var renderBubble = function renderBubble(props) {\n    return _jsx(Bubble, _objectSpread(_objectSpread({}, props), {}, {\n      wrapperStyle: {\n        right: {\n          backgroundColor: '#263238'\n        },\n        left: {\n          backgroundColor: '#fafafa'\n        }\n      }\n    }));\n  };\n\n  var renderSend = function renderSend(props) {\n    return _jsx(Send, _objectSpread(_objectSpread({}, props), {}, {\n      children: _jsx(View, {\n        children: myIconio\n      })\n    }));\n  };\n\n  var Chat = function Chat() {\n    return _jsx(GiftedChat, {\n      messages: messages,\n      onSend: function onSend(messages) {\n        return _onSend(messages);\n      },\n      user: {\n        _id: 1\n      },\n      renderBubble: renderBubble,\n      alwaysShowSend: true,\n      renderSend: renderSend\n    });\n  };\n\n  return _jsx(Chat, {});\n};\n\nexport default Inbox;","map":{"version":3,"sources":["C:/Users/codetribe/Documents/GitHub/moveapp/awesomeproject/src/screen/ChatScreen/Inbox.js"],"names":["React","useState","useCallback","useEffect","styles","useRoute","Bubble","GiftedChat","Send","Iconi","myIconio","Inbox","messages","setMessages","_id","text","createdAt","Date","user","name","avatar","route","data","params","dat","image","onSend","previousMessages","append","renderBubble","props","right","backgroundColor","left","renderSend","Chat"],"mappings":";;;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,OAAOC,MAAP;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,IAA7B,QAAyC,0BAAzC;AACA,OAAOC,KAAP;;;AAIA,IAAMC,QAAQ,GAAG,KAAC,KAAD;AAAO,EAAA,IAAI,EAAC,aAAZ;AAA0B,EAAA,IAAI,EAAE,EAAhC;AAAoC,EAAA,KAAK,EAAC;AAA1C,EAAjB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAElB,kBAAgCV,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOW,QAAP;AAAA,MAAiBC,WAAjB;;AAEAV,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,WAAW,CAAC,CACV;AACEC,MAAAA,GAAG,EAAE,CADP;AAEEC,MAAAA,IAAI,EAAE,cAFR;AAGEC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,EAHb;AAIEC,MAAAA,IAAI,EAAE;AACJJ,QAAAA,GAAG,EAAE,CADD;AAEJK,QAAAA,IAAI,EAAE,cAFF;AAGJC,QAAAA,MAAM,EAAE;AAHJ;AAJR,KADU,EAYV;AACEN,MAAAA,GAAG,EAAE,CADP;AAEEC,MAAAA,IAAI,EAAE,gBAFR;AAGEC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,EAHb;AAIEC,MAAAA,IAAI,EAAE;AACJJ,QAAAA,GAAG,EAAC,CADA;AAEJK,QAAAA,IAAI,EAAE,cAFF;AAGJC,QAAAA,MAAM,EAAE;AAHJ;AAJR,KAZU,CAAD,CAAX;AA0BD,GA3BQ,EA2BN,EA3BM,CAAT;AA6BE,MAAMC,KAAK,GAAGhB,QAAQ,EAAtB;AACA,MAAMiB,IAAI,GAAGD,KAAK,CAACE,MAAnB;AACA,MAAMC,GAAG,GAAGF,IAAI,CAACG,KAAjB;;AAGA,MAAMC,OAAM,GAAGxB,WAAW,CAAC,YAAmB;AAAA,QAAlBU,QAAkB,uEAAP,EAAO;AAC5CC,IAAAA,WAAW,CAAC,UAAAc,gBAAgB;AAAA,aAAIpB,UAAU,CAACqB,MAAX,CAAkBD,gBAAlB,EAAoCf,QAApC,CAAJ;AAAA,KAAjB,CAAX;AACD,GAFyB,EAEvB,EAFuB,CAA1B;;AAQA,MAAMiB,YAAY,GAAE,SAAdA,YAAc,CAACC,KAAD,EAAS;AAC3B,WAEA,KAAC,MAAD,kCACIA,KADJ;AAGA,MAAA,YAAY,EAAE;AACZC,QAAAA,KAAK,EAAC;AACJC,UAAAA,eAAe,EAAC;AADZ,SADM;AAIZC,QAAAA,IAAI,EAAC;AACHD,UAAAA,eAAe,EAAC;AADb;AAJO;AAHd,OAFA;AAiBC,GAlBH;;AA0BJ,MAAME,UAAU,GAAE,SAAZA,UAAY,CAACJ,KAAD,EAAS;AAC3B,WAEA,KAAC,IAAD,kCACIA,KADJ;AAAA,gBAEA,KAAC,IAAD;AAAA,kBACCpB;AADD;AAFA,OAFA;AAWC,GAZD;;AAcI,MAAMyB,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,WAEE,KAAC,UAAD;AACA,MAAA,QAAQ,EAAEvB,QADV;AAEA,MAAA,MAAM,EAAE,gBAAAA,QAAQ;AAAA,eAAIc,OAAM,CAACd,QAAD,CAAV;AAAA,OAFhB;AAGA,MAAA,IAAI,EAAE;AACJE,QAAAA,GAAG,EAAE;AADD,OAHN;AAMA,MAAA,YAAY,EAAEe,YANd;AAOA,MAAA,cAAc,MAPd;AAQF,MAAA,UAAU,EAAEK;AARV,MAFF;AAeF,GAhBA;;AAkBF,SAGA,KAAC,IAAD,KAHA;AAOD,CA/GD;;AAmHA,eAAevB,KAAf","sourcesContent":["import { View, Text, Image} from 'react-native'\r\nimport React, { useState, useCallback, useEffect } from 'react'\r\nimport styles from './styles'\r\nimport { useRoute } from \"@react-navigation/native\";\r\nimport { Bubble, GiftedChat, Send } from 'react-native-gifted-chat'\r\nimport Iconi from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\n\r\n\r\nconst myIconio = <Iconi name=\"send-circle\" size={32} color=\"#263238\" />;\r\n\r\nconst Inbox = () => {\r\n\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setMessages([\r\n      {\r\n        _id: 1,\r\n        text: 'good morning',\r\n        createdAt: new Date(),\r\n        user: {\r\n          _id: 2,\r\n          name: 'React Native',\r\n          avatar: 'https://placeimg.com/140/140/any',\r\n        },\r\n        \r\n      },\r\n      {\r\n        _id: 2,\r\n        text: 'hellow morning',\r\n        createdAt: new Date(),\r\n        user: {\r\n          _id:1 ,\r\n          name: 'React Native',\r\n          avatar: 'https://placeimg.com/140/140/any',\r\n        },\r\n        \r\n      },\r\n\r\n      \r\n    ])\r\n  }, [])\r\n\r\n    const route = useRoute();\r\n    const data = route.params;\r\n    const dat = data.image;\r\n\r\n\r\n    const onSend = useCallback((messages = []) => {\r\n      setMessages(previousMessages => GiftedChat.append(previousMessages, messages))\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n    const renderBubble =(props)=>{\r\n      return(\r\n      \r\n      <Bubble\r\n      {...props}\r\n      \r\n      wrapperStyle={{\r\n        right:{\r\n          backgroundColor:'#263238'\r\n        }, \r\n        left:{\r\n          backgroundColor:'#fafafa'\r\n        }\r\n      }}\r\n      \r\n      />\r\n      \r\n      )\r\n      }\r\n      \r\n\r\n\r\n\r\n\r\n\r\n  \r\nconst renderSend =(props)=>{\r\nreturn(\r\n\r\n<Send\r\n{...props}>\r\n<View>\r\n{myIconio}\r\n</View>\r\n\r\n</Send>\r\n\r\n)\r\n}\r\n\r\n    const Chat = () => {\r\n      return (\r\n     \r\n        <GiftedChat\r\n        messages={messages}\r\n        onSend={messages => onSend(messages)}\r\n        user={{\r\n          _id: 1,\r\n        }}\r\n        renderBubble={renderBubble}\r\n        alwaysShowSend\r\n      renderSend={renderSend}\r\n      />\r\n\r\n\r\n     );\r\n   };\r\n \r\n  return (\r\n\r\n    \r\n  <Chat/>\r\n\r\n\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Inbox"]},"metadata":{},"sourceType":"module"}