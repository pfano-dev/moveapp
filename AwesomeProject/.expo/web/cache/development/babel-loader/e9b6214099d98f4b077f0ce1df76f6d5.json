{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Color from \"./Color\";\nimport { warning, StylePropType } from \"./utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    maxWidth: 300\n  },\n  quickReply: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1,\n    maxWidth: 200,\n    paddingVertical: 7,\n    paddingHorizontal: 12,\n    minHeight: 50,\n    borderRadius: 13,\n    margin: 3\n  },\n  quickReplyText: {\n    overflow: 'visible'\n  },\n  sendLink: {\n    borderWidth: 0\n  },\n  sendLinkText: {\n    color: Color.defaultBlue,\n    fontWeight: '600',\n    fontSize: 17\n  }\n});\n\nvar sameReply = function sameReply(currentReply) {\n  return function (reply) {\n    return currentReply.value === reply.value;\n  };\n};\n\nvar diffReply = function diffReply(currentReply) {\n  return function (reply) {\n    return currentReply.value !== reply.value;\n  };\n};\n\nvar QuickReplies = function (_Component) {\n  _inherits(QuickReplies, _Component);\n\n  var _super = _createSuper(QuickReplies);\n\n  function QuickReplies() {\n    var _this;\n\n    _classCallCheck(this, QuickReplies);\n\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      replies: []\n    };\n\n    _this.handlePress = function (reply) {\n      return function () {\n        var currentMessage = _this.props.currentMessage;\n        var replies = _this.state.replies;\n\n        if (currentMessage) {\n          var type = currentMessage.quickReplies.type;\n\n          switch (type) {\n            case 'radio':\n              {\n                _this.handleSend([reply])();\n\n                return;\n              }\n\n            case 'checkbox':\n              {\n                if (replies.find(sameReply(reply))) {\n                  _this.setState({\n                    replies: _this.state.replies.filter(diffReply(reply))\n                  });\n                } else {\n                  _this.setState({\n                    replies: [].concat(_toConsumableArray(_this.state.replies), [reply])\n                  });\n                }\n\n                return;\n              }\n\n            default:\n              {\n                warning(\"onQuickReply unknown type: \" + type);\n                return;\n              }\n          }\n        }\n      };\n    };\n\n    _this.handleSend = function (replies) {\n      return function () {\n        var currentMessage = _this.props.currentMessage;\n\n        if (_this.props.onQuickReply) {\n          _this.props.onQuickReply(replies.map(function (reply) {\n            return _objectSpread(_objectSpread({}, reply), {}, {\n              messageId: currentMessage._id\n            });\n          }));\n        }\n      };\n    };\n\n    _this.shouldComponentDisplay = function () {\n      var _this$props = _this.props,\n          currentMessage = _this$props.currentMessage,\n          nextMessage = _this$props.nextMessage;\n      var hasReplies = !!currentMessage && !!currentMessage.quickReplies;\n      var hasNext = !!nextMessage && !!nextMessage._id;\n      var keepIt = currentMessage.quickReplies.keepIt;\n\n      if (hasReplies && !hasNext) {\n        return true;\n      }\n\n      if (hasReplies && hasNext && keepIt) {\n        return true;\n      }\n\n      return false;\n    };\n\n    _this.renderQuickReplySend = function () {\n      var replies = _this.state.replies;\n      var _this$props2 = _this.props,\n          sendText = _this$props2.sendText,\n          customSend = _this$props2.renderQuickReplySend;\n      return _jsx(TouchableOpacity, {\n        style: [styles.quickReply, styles.sendLink],\n        onPress: _this.handleSend(replies),\n        children: customSend ? customSend() : _jsx(Text, {\n          style: styles.sendLinkText,\n          children: sendText\n        })\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(QuickReplies, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          currentMessage = _this$props3.currentMessage,\n          color = _this$props3.color,\n          quickReplyStyle = _this$props3.quickReplyStyle;\n      var replies = this.state.replies;\n\n      if (!this.shouldComponentDisplay()) {\n        return null;\n      }\n\n      var type = currentMessage.quickReplies.type;\n      return _jsxs(View, {\n        style: styles.container,\n        children: [currentMessage.quickReplies.values.map(function (reply, index) {\n          var selected = type === 'checkbox' && replies.find(sameReply(reply));\n          return _jsx(TouchableOpacity, {\n            onPress: _this2.handlePress(reply),\n            style: [styles.quickReply, quickReplyStyle, {\n              borderColor: color\n            }, selected && {\n              backgroundColor: color\n            }],\n            children: _jsx(Text, {\n              numberOfLines: 10,\n              ellipsizeMode: 'tail',\n              style: [styles.quickReplyText, {\n                color: selected ? Color.white : color\n              }],\n              children: reply.title\n            })\n          }, reply.value + \"-\" + index);\n        }), replies.length > 0 && this.renderQuickReplySend()]\n      });\n    }\n  }]);\n\n  return QuickReplies;\n}(Component);\n\nexport { QuickReplies as default };\nQuickReplies.defaultProps = {\n  currentMessage: {\n    quickReplies: []\n  },\n  onQuickReply: function onQuickReply() {},\n  color: Color.peterRiver,\n  sendText: 'Send',\n  keepReplies: false,\n  renderQuickReplySend: undefined,\n  quickReplyStyle: undefined\n};\nQuickReplies.propTypes = {\n  currentMessage: PropTypes.object.isRequired,\n  onQuickReply: PropTypes.func,\n  color: PropTypes.string,\n  sendText: PropTypes.string,\n  keepReplies: PropTypes.bool,\n  renderQuickReplySend: PropTypes.func,\n  quickReplyStyle: StylePropType\n};","map":{"version":3,"sources":["../src/QuickReplies.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport { Text, StyleSheet, View, TouchableOpacity, } from 'react-native';\r\nimport Color from './Color';\r\nimport { warning, StylePropType } from './utils';\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        maxWidth: 300,\r\n    },\r\n    quickReply: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderWidth: 1,\r\n        maxWidth: 200,\r\n        paddingVertical: 7,\r\n        paddingHorizontal: 12,\r\n        minHeight: 50,\r\n        borderRadius: 13,\r\n        margin: 3,\r\n    },\r\n    quickReplyText: {\r\n        overflow: 'visible',\r\n    },\r\n    sendLink: {\r\n        borderWidth: 0,\r\n    },\r\n    sendLinkText: {\r\n        color: Color.defaultBlue,\r\n        fontWeight: '600',\r\n        fontSize: 17,\r\n    },\r\n});\r\nconst sameReply = (currentReply) => (reply) => currentReply.value === reply.value;\r\nconst diffReply = (currentReply) => (reply) => currentReply.value !== reply.value;\r\nexport default class QuickReplies extends Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.state = {\r\n            replies: [],\r\n        };\r\n        this.handlePress = (reply) => () => {\r\n            const { currentMessage } = this.props;\r\n            const { replies } = this.state;\r\n            if (currentMessage) {\r\n                const { type } = currentMessage.quickReplies;\r\n                switch (type) {\r\n                    case 'radio': {\r\n                        this.handleSend([reply])();\r\n                        return;\r\n                    }\r\n                    case 'checkbox': {\r\n                        if (replies.find(sameReply(reply))) {\r\n                            this.setState({\r\n                                replies: this.state.replies.filter(diffReply(reply)),\r\n                            });\r\n                        }\r\n                        else {\r\n                            this.setState({ replies: [...this.state.replies, reply] });\r\n                        }\r\n                        return;\r\n                    }\r\n                    default: {\r\n                        warning(`onQuickReply unknown type: ${type}`);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        this.handleSend = (replies) => () => {\r\n            const { currentMessage } = this.props;\r\n            if (this.props.onQuickReply) {\r\n                this.props.onQuickReply(replies.map((reply) => ({\r\n                    ...reply,\r\n                    messageId: currentMessage._id,\r\n                })));\r\n            }\r\n        };\r\n        this.shouldComponentDisplay = () => {\r\n            const { currentMessage, nextMessage } = this.props;\r\n            const hasReplies = !!currentMessage && !!currentMessage.quickReplies;\r\n            const hasNext = !!nextMessage && !!nextMessage._id;\r\n            const keepIt = currentMessage.quickReplies.keepIt;\r\n            if (hasReplies && !hasNext) {\r\n                return true;\r\n            }\r\n            if (hasReplies && hasNext && keepIt) {\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        this.renderQuickReplySend = () => {\r\n            const { replies } = this.state;\r\n            const { sendText, renderQuickReplySend: customSend } = this.props;\r\n            return (<TouchableOpacity style={[styles.quickReply, styles.sendLink]} onPress={this.handleSend(replies)}>\r\n        {customSend ? (customSend()) : (<Text style={styles.sendLinkText}>{sendText}</Text>)}\r\n      </TouchableOpacity>);\r\n        };\r\n    }\r\n    render() {\r\n        const { currentMessage, color, quickReplyStyle } = this.props;\r\n        const { replies } = this.state;\r\n        if (!this.shouldComponentDisplay()) {\r\n            return null;\r\n        }\r\n        const { type } = currentMessage.quickReplies;\r\n        return (<View style={styles.container}>\r\n        {currentMessage.quickReplies.values.map((reply, index) => {\r\n            const selected = type === 'checkbox' && replies.find(sameReply(reply));\r\n            return (<TouchableOpacity onPress={this.handlePress(reply)} style={[\r\n                styles.quickReply,\r\n                quickReplyStyle,\r\n                { borderColor: color },\r\n                selected && { backgroundColor: color },\r\n            ]} key={`${reply.value}-${index}`}>\r\n                <Text numberOfLines={10} ellipsizeMode={'tail'} style={[\r\n                styles.quickReplyText,\r\n                { color: selected ? Color.white : color },\r\n            ]}>\r\n                  {reply.title}\r\n                </Text>\r\n              </TouchableOpacity>);\r\n        })}\r\n        {replies.length > 0 && this.renderQuickReplySend()}\r\n      </View>);\r\n    }\r\n}\r\nQuickReplies.defaultProps = {\r\n    currentMessage: {\r\n        quickReplies: [],\r\n    },\r\n    onQuickReply: () => { },\r\n    color: Color.peterRiver,\r\n    sendText: 'Send',\r\n    keepReplies: false,\r\n    renderQuickReplySend: undefined,\r\n    quickReplyStyle: undefined,\r\n};\r\nQuickReplies.propTypes = {\r\n    currentMessage: PropTypes.object.isRequired,\r\n    onQuickReply: PropTypes.func,\r\n    color: PropTypes.string,\r\n    sendText: PropTypes.string,\r\n    keepReplies: PropTypes.bool,\r\n    renderQuickReplySend: PropTypes.func,\r\n    quickReplyStyle: StylePropType,\r\n};\r\n//# sourceMappingURL=QuickReplies.js.map"]},"metadata":{},"sourceType":"module"}