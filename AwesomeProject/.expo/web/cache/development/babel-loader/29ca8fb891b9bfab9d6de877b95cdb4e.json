{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useNavigation } from '@react-navigation/native';\nimport { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport React, { useState, useEffect } from 'react';\nimport styles from \"./styles\";\nimport Icon from \"@expo/vector-icons/Feather\";\nimport PlaceRow from \"./PlaceRow\";\nimport Entypo from \"@expo/vector-icons/Entypo\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar myIcon = _jsx(Icon, {\n  name: \"clock\",\n  size: 30,\n  color: \"black\"\n});\n\nvar SearchScreen = function SearchScreen() {\n  var navigation = useNavigation();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      originPlace = _useState2[0],\n      setOriginPlace = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      destinationPlace = _useState4[0],\n      setDestinationPlace = _useState4[1];\n\n  useEffect(function () {\n    navigation.navigate('SearchResults');\n  }, []);\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.nowView,\n        children: [_jsxs(Text, {\n          children: [myIcon, \" \"]\n        }), _jsx(Text, {\n          style: styles.now,\n          children: \"Now\"\n        })]\n      }), _jsx(Text, {\n        style: styles.selectText,\n        children: \"Select Pick-up & destination Location\"\n      }), _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(GooglePlacesAutocomplete, {\n          placeholder: \"Search\",\n          onPress: function onPress(data) {\n            var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            setOriginPlace({\n              data: data,\n              details: details\n            });\n            console.log(data, details);\n          },\n          suppressDefaultStyles: true,\n          styles: {\n            separator: styles.separator,\n            textInput: styles.textInput,\n            container: {\n              position: 'absolute',\n              top: 0,\n              right: 10,\n              width: '88%'\n            },\n            listView: {\n              position: 'absolute',\n              top: 118\n            }\n          },\n          fetchDetails: true,\n          query: {\n            key: 'AIzaSyAGXSUtb0RGrt4V55SXW5ZV9n5Z4xuVd7w',\n            language: 'en'\n          },\n          renderRow: function renderRow(data) {\n            return _jsx(PlaceRow, {\n              data: data\n            });\n          }\n        }), _jsx(GooglePlacesAutocomplete, {\n          placeholder: \"Where To\",\n          onPress: function onPress(data) {\n            var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            setDestinationPlace({\n              data: data,\n              details: details\n            });\n            console.log(data, details);\n          },\n          suppressDefaultStyles: true,\n          styles: {\n            separator: styles.separator,\n            textInput: styles.textInput,\n            container: {\n              position: 'absolute',\n              top: 60,\n              right: 10,\n              width: '88%'\n            }\n          },\n          fetchDetails: true,\n          query: {\n            key: 'AIzaSyAGXSUtb0RGrt4V55SXW5ZV9n5Z4xuVd7w',\n            language: 'en'\n          },\n          renderRow: function renderRow(data) {\n            return _jsx(PlaceRow, {\n              data: data\n            });\n          }\n        }), _jsx(View, {\n          style: styles.circle,\n          children: _jsx(Entypo, {\n            name: \"location-pin\",\n            size: 20,\n            color: 'white'\n          })\n        }), _jsx(View, {\n          style: styles.line\n        }), _jsx(View, {\n          style: [styles.circle, {\n            top: 88,\n            backgroundColor: '#00acc1'\n          }],\n          children: _jsx(Entypo, {\n            name: \"location-pin\",\n            size: 20,\n            color: 'white'\n          })\n        })]\n      })]\n    })\n  });\n};\n\nexport default SearchScreen;","map":{"version":3,"sources":["C:/Users/codetribe/Documents/GitHub/moveapp/AwesomeProject/src/screen/SearchScreen/index.js"],"names":["useNavigation","GooglePlacesAutocomplete","React","useState","useEffect","styles","Icon","PlaceRow","Entypo","myIcon","SearchScreen","navigation","originPlace","setOriginPlace","destinationPlace","setDestinationPlace","navigate","flex","container","nowView","now","selectText","data","details","console","log","separator","textInput","position","top","right","width","listView","key","language","circle","line","backgroundColor"],"mappings":"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","sourcesContent":["import { useNavigation } from '@react-navigation/native';\r\nimport { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete';\r\nimport { View, Text,SafeAreaView  } from 'react-native'\r\nimport React,{useState, useEffect} from 'react'\r\nimport styles from './styles';\r\nimport Icon from 'react-native-vector-icons/Feather';\r\nimport PlaceRow from \"./PlaceRow\";\r\nimport Entypo from \"react-native-vector-icons/Entypo\";\r\n\r\nconst myIcon = <Icon name=\"clock\" size={30} color=\"black\"/>\r\n\r\nconst SearchScreen = () => {\r\n\r\n  const navigation = useNavigation();\r\n\r\n  const [originPlace, setOriginPlace] = useState(null);\r\n  const [destinationPlace, setDestinationPlace] = useState(null);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    navigation.navigate('SearchResults')\r\n  }, []);\r\n\r\n\r\n  // const checkNavigation = () => {\r\n  //   if (originPlace && destinationPlace) {\r\n  //     navigation.navigate('SearchResults', {\r\n  //       originPlace,\r\n  //       destinationPlace,\r\n  //     })\r\n  //   }\r\n  // }\r\n\r\n  // useEffect(() => {\r\n  //   checkNavigation();\r\n  // }, [originPlace, destinationPlace]);\r\n\r\n\r\n  return (\r\n    <SafeAreaView style={{flex:1}}>\r\n    <View style={styles.container}>\r\n<View style={styles.nowView}>\r\n  <Text>{myIcon} </Text>\r\n<Text style={styles.now}>Now</Text>\r\n</View>\r\n<Text style={styles.selectText}>Select Pick-up & destination Location</Text>\r\n\r\n\r\n<View style={styles.container}>\r\n        <GooglePlacesAutocomplete\r\n      placeholder='Search'\r\n      onPress={(data, details = null) => {\r\n        setOriginPlace({data , details})\r\n        console.log(data, details);\r\n      }}\r\n      suppressDefaultStyles\r\n\r\n      styles={{\r\n        separator: styles.separator,\r\n        textInput:styles.textInput,\r\n        container:{\r\n          position:'absolute',\r\n          top:0,\r\n          right:10,\r\n          width:'88%'\r\n               },\r\n               listView:{\r\n                position:'absolute',\r\n                top:118,\r\n              }    \r\n\r\n      }}\r\n\r\n      fetchDetails\r\n      query={{\r\n        key: 'AIzaSyAGXSUtb0RGrt4V55SXW5ZV9n5Z4xuVd7w',\r\n        language: 'en',\r\n      }}\r\n      renderRow={(data) => <PlaceRow data={data} />}\r\n\r\n    />\r\n\r\n <GooglePlacesAutocomplete\r\n      placeholder='Where To'\r\n      onPress={(data, details = null) => {\r\n        setDestinationPlace({data , details})\r\n        console.log(data, details);\r\n      }}\r\n      suppressDefaultStyles\r\n\r\n      \r\n\r\n      styles={{\r\n        separator: styles.separator,\r\n        textInput:styles.textInput,\r\n        container:{\r\n          position:'absolute',\r\n          top:60,\r\n          right:10,\r\n          width:'88%'\r\n               },\r\n\r\n          // listView:{\r\n          //   position:'absolute',\r\n          //   top:105,\r\n          // }     \r\n\r\n      }}\r\n\r\n\r\n      fetchDetails\r\n      query={{\r\n        key: 'AIzaSyAGXSUtb0RGrt4V55SXW5ZV9n5Z4xuVd7w',\r\n        language: 'en',\r\n      }}\r\n      renderRow={(data) => <PlaceRow data={data} />}\r\n\r\n    /> \r\n\r\n\r\n   <View style={styles.circle} >\r\n     <Entypo name='location-pin' size={20} color={'white'} />\r\n      </View> \r\n   <View style={styles.line}/> \r\n   <View style={[styles.circle,{top:88,backgroundColor:'#00acc1'}]} >\r\n      <Entypo name='location-pin' size={20} color={'white'} />\r\n   </View> \r\n\r\n</View>\r\n\r\n    </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nexport default SearchScreen;"]},"metadata":{},"sourceType":"module"}