{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React from 'react';\nimport styles from \"./styles.js\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar myIcon1 = _jsx(Icon, {\n  name: \"hand-point-right\",\n  size: 30,\n  color: \"black\"\n});\n\nvar ConfimScreen = function ConfimScreen(_ref) {\n  var navigation = _ref.navigation;\n  var route = useRoute();\n  var data = route.params;\n  console.log(data);\n  var types = data.type;\n\n  var getImage = function getImage() {\n    if (types.type === 'Trailer') {\n      return require(\"../../assets/images/Trailer.jpeg\");\n    }\n\n    if (types.type === 'Bakkie') {\n      return require(\"../../assets/images/Bakkie.jpeg\");\n    }\n\n    return require(\"../../assets/images/Truck.jpeg\");\n  };\n\n  var distan = types.price * data.distance;\n  var distances = parseInt(distan, 10);\n  return _jsxs(View, {\n    style: {\n      backgroundColor: \"white\",\n      height: \"100%\"\n    },\n    children: [_jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.type,\n        children: types.type\n      }), _jsx(Image, {\n        style: styles.image,\n        source: getImage()\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(View, {\n        style: styles.subHead,\n        children: _jsx(Text, {\n          style: styles.subText,\n          children: \"Your Request Details\"\n        })\n      }), data.date ? _jsxs(Text, {\n        style: styles.middle,\n        children: [\" Date: \", data.date]\n      }) : null, _jsxs(Text, {\n        style: styles.middle,\n        children: [\" FROM: \", data.origins]\n      }), _jsxs(Text, {\n        style: styles.middle,\n        children: [\" TO: \", data.destinations]\n      }), _jsxs(Text, {\n        style: styles.middle,\n        children: [\" Distence : \", data.distance, \" km\"]\n      }), _jsxs(Text, {\n        style: styles.middle,\n        children: [\" Total Price R\", distances + 2, \" \"]\n      }), _jsxs(Text, {\n        style: styles.middle,\n        children: [\" Carry \", types.duration]\n      })]\n    }), _jsx(View, {\n      style: styles.btnView,\n      children: _jsx(TouchableOpacity, {\n        style: styles.btn,\n        onPress: function onPress() {\n          return navigation.navigate(\"Payment\", {\n            data: data,\n            distances: distances\n          });\n        },\n        children: _jsxs(Text, {\n          style: styles.btnText,\n          children: [\"Confirm \", types.type]\n        })\n      })\n    })]\n  });\n};\n\nexport default ConfimScreen;","map":{"version":3,"sources":["C:/Users/codetribe/Documents/GitHub/moveapp/awesomeproject/src/screen/ConfimScreen/index.js"],"names":["React","styles","Icon","useRoute","myIcon1","ConfimScreen","navigation","route","data","params","console","log","types","type","getImage","require","distan","price","distance","distances","parseInt","backgroundColor","height","container","image","subHead","subText","date","middle","origins","destinations","duration","btnView","btn","navigate","btnText"],"mappings":"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","sourcesContent":["import { View, Text, TouchableOpacity,Image } from 'react-native'\r\nimport React from 'react'\r\nimport styles from \"./styles.js\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome5\";\r\nimport { useRoute } from \"@react-navigation/native\";\r\n\r\nconst myIcon1 = <Icon name=\"hand-point-right\" size={30} color=\"black\" />;\r\n\r\n\r\nconst ConfimScreen = ({navigation}) => {\r\n\r\n  const route = useRoute();\r\n  const data = route.params;\r\n  console.log(data)\r\n  const types = data.type;\r\n\r\n  const getImage = () => {\r\n    if (types.type === 'Trailer') {\r\n      return require('../../assets/images/Trailer.jpeg');\r\n    }\r\n    if (types.type === 'Bakkie') {\r\n      return require('../../assets/images/Bakkie.jpeg');\r\n    }\r\n    return require('../../assets/images/Truck.jpeg');\r\n  }\r\n\r\nconst distan =  types.price*data.distance\r\n\r\nconst distances = parseInt(distan, 10)\r\n\r\n  return (\r\n    <View style={{ backgroundColor: \"white\", height: \"100%\" }}>\r\n\r\n        <View style={styles.container}>\r\n          <Text style={styles.type}>{types.type}</Text>\r\n\r\n          <Image style={styles.image} source={getImage()} />\r\n        </View>\r\n        <View>\r\n          <View style={styles.subHead}>\r\n            <Text style={styles.subText}>Your Request Details</Text>\r\n          </View>\r\n\r\n          {data.date\r\n          ?   <Text style={styles.middle}> Date: {data.date}</Text>\r\n          : null\r\n        }\r\n          <Text style={styles.middle}> FROM: {data.origins}</Text>\r\n          <Text style={styles.middle}> TO: {data.destinations}</Text>\r\n          <Text style={styles.middle}> Distence : {data.distance} km</Text>\r\n          <Text style={styles.middle}> Total Price R{distances+2} </Text>\r\n          <Text style={styles.middle}> Carry {types.duration}</Text>\r\n        </View>\r\n\r\n        <View style={styles.btnView}>\r\n          <TouchableOpacity style={styles.btn}\r\n            onPress={() => navigation.navigate(\"Payment\",{data ,distances})}\r\n          >\r\n       \r\n            <Text style={styles.btnText}>Confirm {types.type}</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n   \r\n    </View>\r\n  )\r\n}\r\n\r\nexport default ConfimScreen"]},"metadata":{},"sourceType":"module"}