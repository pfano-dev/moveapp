{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport 'react-native-gesture-handler';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport PermissionsAndroid from \"react-native-web/dist/exports/PermissionsAndroid\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport React, { useState, useEffect } from 'react';\nimport Home from \"./src/Navigation/Home\";\nimport YourTrip from \"./src/screen/DrawerScreen/YourTrip\";\nimport Setting from \"./src/screen/DrawerScreen/Setting\";\nimport History from \"./src/screen/DrawerScreen/History\";\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport Iconi from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport CustomDrawer from \"./CustomDrawer\";\nimport Amplify from 'aws-amplify';\nimport awsconfig from \"./src/aws-exports\";\nimport { withAuthenticator } from 'aws-amplify-react-native';\nimport { AmplifyTheme } from 'aws-amplify-react-native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar myButton = _extends({}, AmplifyTheme.button, {\n  backgroundColor: 'black'\n});\n\nvar MyTheme = _extends({}, AmplifyTheme, {\n  button: myButton\n});\n\nAmplify.configure(_objectSpread(_objectSpread({}, awsconfig), {}, {\n  Analytics: {\n    disabled: true\n  }\n}));\nvar Drawer = createDrawerNavigator();\n\nvar myIcon = _jsx(Icon, {\n  name: \"message-text-outline\",\n  size: 30,\n  color: \"black\"\n});\n\nvar myIconi = _jsx(Iconi, {\n  name: \"menu\",\n  size: 30,\n  color: \"black\"\n});\n\nvar App = function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Drawer.Navigator, {\n      drawerContent: function drawerContent(props) {\n        return _jsx(CustomDrawer, _objectSpread({}, props));\n      },\n      children: [_jsx(Drawer.Screen, {\n        name: \"Home\",\n        component: Home,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Drawer.Screen, {\n        name: \"YourTrip\",\n        component: YourTrip\n      }), _jsx(Drawer.Screen, {\n        name: \"History\",\n        component: History\n      }), _jsx(Drawer.Screen, {\n        name: \"Setting\",\n        component: Setting\n      })]\n    })\n  });\n};\n\nexport default withAuthenticator(App, false, [], null, MyTheme);","map":{"version":3,"sources":["C:/Users/codetribe/Documents/GitHub/moveapp/awesomeproject/App.js"],"names":["React","useState","useEffect","Home","YourTrip","Setting","History","createDrawerNavigator","NavigationContainer","Icon","Iconi","CustomDrawer","Amplify","awsconfig","withAuthenticator","AmplifyTheme","myButton","button","backgroundColor","MyTheme","configure","Analytics","disabled","Drawer","myIcon","myIconi","App","props","headerShown"],"mappings":";;;;;;;AAAA,OAAO,8BAAP;;;;;AAIA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,IAAP;AACA,OAAOC,QAAP;AACA,OAAOC,OAAP;AACA,OAAOC,OAAP;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,IAAP;AACA,OAAOC,KAAP;AAKA,OAAOC,YAAP;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,SAAP;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,YAAT,QAA6B,0BAA7B;;;;AAGA,IAAMC,QAAQ,GAAG,SAAc,EAAd,EAAkBD,YAAY,CAACE,MAA/B,EAAuC;AAAEC,EAAAA,eAAe,EAAE;AAAnB,CAAvC,CAAjB;;AACA,IAAMC,OAAO,GAAG,SAAc,EAAd,EAAkBJ,YAAlB,EAAgC;AAAEE,EAAAA,MAAM,EAAED;AAAV,CAAhC,CAAhB;;AAGAJ,OAAO,CAACQ,SAAR,iCACKP,SADL;AAEEQ,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE;AADD;AAFb;AASA,IAAMC,MAAM,GAAGhB,qBAAqB,EAApC;;AACA,IAAMiB,MAAM,GAAG,KAAC,IAAD;AAAM,EAAA,IAAI,EAAC,sBAAX;AAAkC,EAAA,IAAI,EAAE,EAAxC;AAA4C,EAAA,KAAK,EAAC;AAAlD,EAAf;;AACA,IAAMC,OAAO,GAAG,KAAC,KAAD;AAAO,EAAA,IAAI,EAAC,MAAZ;AAAmB,EAAA,IAAI,EAAE,EAAzB;AAA6B,EAAA,KAAK,EAAC;AAAnC,EAAhB;;AACA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAmChB,SAEE,KAAC,mBAAD;AAAA,cACA,MAAC,MAAD,CAAQ,SAAR;AACG,MAAA,aAAa,EACd,uBAACC,KAAD;AAAA,eACE,KAAC,YAAD,oBAAkBA,KAAlB,EADF;AAAA,OAFF;AAAA,iBAOA,KAAC,MAAD,CAAQ,MAAR;AAAe,QAAA,IAAI,EAAC,MAApB;AAA2B,QAAA,SAAS,EAAExB,IAAtC;AAGG,QAAA,OAAO,EAAE;AACRyB,UAAAA,WAAW,EAAE;AADL;AAHZ,QAPA,EAeA,KAAC,MAAD,CAAQ,MAAR;AAAe,QAAA,IAAI,EAAC,UAApB;AAA+B,QAAA,SAAS,EAAExB;AAA1C,QAfA,EAgBA,KAAC,MAAD,CAAQ,MAAR;AAAe,QAAA,IAAI,EAAC,SAApB;AAA8B,QAAA,SAAS,EAAEE;AAAzC,QAhBA,EAiBA,KAAC,MAAD,CAAQ,MAAR;AAAe,QAAA,IAAI,EAAC,SAApB;AAA8B,QAAA,SAAS,EAAED;AAAzC,QAjBA;AAAA;AADA,IAFF;AA4BD,CA/DD;;AAiEA,eAAeS,iBAAiB,CAACY,GAAD,EAAM,KAAN,EAAa,EAAb,EAAiB,IAAjB,EAAuBP,OAAvB,CAAhC","sourcesContent":["import 'react-native-gesture-handler';\r\n\r\n\r\nimport { View, Text, PermissionsAndroid, Platform} from 'react-native'\r\nimport React,{useState, useEffect} from 'react';\r\nimport Home from './src/Navigation/Home';\r\nimport YourTrip from './src/screen/DrawerScreen/YourTrip';\r\nimport Setting from './src/screen/DrawerScreen/Setting';\r\nimport History from './src/screen/DrawerScreen/History';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport Iconi from 'react-native-vector-icons/MaterialCommunityIcons';\r\n// import Geolocation from 'react-native-geolocation-service';\r\n// import Geolocation from '@react-native-community/geolocation';\r\n// navigator.geolocation = require('@react-native-community/geolocation');\r\n// navigator.geolocation = require('react-native-geolocation-service');\r\nimport CustomDrawer from \"./CustomDrawer\";\r\nimport Amplify from 'aws-amplify';\r\nimport awsconfig from './src/aws-exports';\r\nimport { withAuthenticator } from 'aws-amplify-react-native'\r\nimport { AmplifyTheme } from 'aws-amplify-react-native';\r\n\r\n\r\nconst myButton = Object.assign({}, AmplifyTheme.button, { backgroundColor: 'black' });\r\nconst MyTheme = Object.assign({}, AmplifyTheme, { button: myButton });\r\n\r\n\r\nAmplify.configure({\r\n  ...awsconfig,\r\n  Analytics: {\r\n    disabled: true,\r\n  },\r\n});\r\n\r\n\r\n\r\nconst Drawer = createDrawerNavigator();\r\nconst myIcon = <Icon name=\"message-text-outline\" size={30} color=\"black\" />;\r\nconst myIconi = <Iconi name=\"menu\" size={30} color=\"black\" />;\r\nconst App = () => {\r\n\r\n  // const androidPermission = async () => {\r\n  //   try {\r\n  //     const granted = await PermissionsAndroid.request(\r\n  //       PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION,\r\n  //       {\r\n  //         title: \" moveit App  location Permission\",\r\n  //         message:\r\n  //           \"moveit App needs access to your location \" +\r\n  //           \"so you can take awesome delevery.\",\r\n  //         buttonNeutral: \"Ask Me Later\",\r\n  //         buttonNegative: \"Cancel\",\r\n  //         buttonPositive: \"OK\"\r\n  //       }\r\n  //     );\r\n  //     if (granted === PermissionsAndroid.RESULTS.GRANTED) {\r\n  //       console.log(\"You can use the location\");\r\n  //     } else {\r\n  //       console.log(\"Location permission denied\");\r\n  //     }\r\n  //   } catch (err) {\r\n  //     console.warn(err);\r\n  //   }\r\n  // }\r\n  // useEffect(() => {\r\n   \r\n  //   androidPermission()\r\n  \r\n    \r\n  // }, [])\r\n\r\n\r\n \r\n\r\n  return (\r\n \r\n    <NavigationContainer>\r\n    <Drawer.Navigator   \r\n       drawerContent={\r\n      (props) => (\r\n        <CustomDrawer {...props} />)\r\n    }\r\n    \r\n    >\r\n    <Drawer.Screen name=\"Home\" component={Home}\r\n     \r\n\r\n       options={{\r\n        headerShown: false,\r\n      }}\r\n      \r\n    />\r\n    <Drawer.Screen name=\"YourTrip\" component={YourTrip} />\r\n    <Drawer.Screen name=\"History\" component={History} />\r\n    <Drawer.Screen name=\"Setting\" component={Setting} />\r\n\r\n  </Drawer.Navigator> \r\n  </NavigationContainer>\r\n \r\n\r\n  )\r\n\r\n}\r\n\r\nexport default withAuthenticator(App, false, [], null, MyTheme)\r\n\r\n\r\n\r\n\r\n// import { View, Text } from 'react-native'\r\n// import React from 'react'\r\n// // import SearchResults from './src/screen/SearchResults'\r\n// import ConfimScreen from './src/screen/ConfimScreen'\r\n\r\n// const App = () => {\r\n//   return (\r\n//     <View>\r\n//       {/* <SearchResults/> */}\r\n//       <ConfimScreen/>\r\n//     </View>\r\n//   )\r\n// }\r\n\r\n// export default App"]},"metadata":{},"sourceType":"module"}