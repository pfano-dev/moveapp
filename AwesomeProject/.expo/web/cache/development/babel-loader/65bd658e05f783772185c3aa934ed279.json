{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport React, { useState, useEffect } from 'react';\nimport styles from \"./styles\";\nimport Iconi from \"@expo/vector-icons/Feather\";\nimport hotels from \"../../assets/data/hotels\";\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar _Dimensions$get = Dimensions.get('screen'),\n    width = _Dimensions$get.width;\n\nvar cardWidth = width;\n\nvar myIcon = _jsx(Iconi, {\n  name: \"search\",\n  size: 30,\n  color: \"#AAAAAA\"\n});\n\nvar DisplayRoom = function DisplayRoom() {\n  var navigation = useNavigation();\n  var categories = ['All', 'Single', 'Family', 'Sharing'];\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selectedCategoryIndex = _React$useState2[0],\n      setSelectedCategoryIndex = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      activeCardIndex = _React$useState4[0],\n      setActiveCardIndex = _React$useState4[1];\n\n  var scrollX = React.useRef(new Animated.Value(0)).current;\n\n  var CategoryList = function CategoryList(_ref) {\n    var navigation = _ref.navigation;\n    return _jsx(View, {\n      style: styles.categoryListContainer,\n      children: categories.map(function (item, index) {\n        return _jsx(TouchableOpacity, {\n          activeOpacity: 0.8,\n          onPress: function onPress() {\n            return setSelectedCategoryIndex(index);\n          },\n          children: _jsxs(View, {\n            children: [_jsx(Text, {\n              style: _objectSpread(_objectSpread({}, styles.categoryListText), {}, {\n                color: selectedCategoryIndex == index ? '#eee' : 'black'\n              }),\n              children: item\n            }), selectedCategoryIndex == index && _jsx(View, {\n              style: {\n                height: 3,\n                width: 30,\n                backgroundColor: '#eee',\n                marginTop: 2\n              }\n            })]\n          })\n        }, index);\n      })\n    });\n  };\n\n  var Card = function Card(_ref2) {\n    var hotel = _ref2.hotel,\n        index = _ref2.index;\n    return _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('RoomDetails', hotel);\n      },\n      children: _jsxs(Animated.View, {\n        style: styles.card,\n        children: [_jsx(View, {\n          style: styles.priceTag,\n          children: _jsxs(Text, {\n            style: {\n              color: \"#eee\",\n              fontSize: 20,\n              fontWeight: 'bold'\n            },\n            children: [\"R\", hotel.price]\n          })\n        }), _jsx(Image, {\n          source: hotel.image,\n          style: styles.cardImage\n        }), _jsxs(View, {\n          style: styles.cardDetails,\n          children: [_jsxs(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between'\n            },\n            children: [_jsxs(View, {\n              children: [_jsx(Text, {\n                style: {\n                  fontWeight: 'bold',\n                  fontSize: 17\n                },\n                children: hotel.name\n              }), _jsx(Text, {\n                style: {\n                  color: 'grey',\n                  fontSize: 12\n                },\n                children: hotel.location\n              })]\n            }), _jsx(Icon, {\n              name: \"bookmark-border\",\n              size: 26,\n              color: \"black\"\n            })]\n          }), _jsxs(Text, {\n            style: {\n              fontSize: 11,\n              color: 'black'\n            },\n            children: [hotel.type, \" \"]\n          }), _jsxs(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              marginTop: 10\n            },\n            children: [_jsxs(View, {\n              style: {\n                flexDirection: 'row'\n              },\n              children: [_jsx(Icon, {\n                name: \"star\",\n                size: 15,\n                color: \"orange\"\n              }), _jsx(Icon, {\n                name: \"star\",\n                size: 15,\n                color: \"orange\"\n              }), _jsx(Icon, {\n                name: \"star\",\n                size: 15,\n                color: \"orange\"\n              }), _jsx(Icon, {\n                name: \"star\",\n                size: 15,\n                color: \"orange\"\n              }), _jsx(Icon, {\n                name: \"star\",\n                size: 15,\n                color: \"grey\"\n              })]\n            }), _jsx(Text, {\n              style: {\n                fontSize: 10,\n                color: 'grey'\n              },\n              children: \"365 reviews\"\n            })]\n          })]\n        })]\n      })\n    });\n  };\n\n  var _useState = useState(hotels),\n      _useState2 = _slicedToArray(_useState, 2),\n      dataState = _useState2[0],\n      setData = _useState2[1];\n\n  var searchName = function searchName(input) {\n    var data = dataState;\n    var searchData = data.filter(function (item) {\n      return item.location.toLowerCase().includes(input.toLowerCase());\n    });\n    {\n      input ? setData(searchData) : setData(hotels);\n    }\n  };\n\n  return _jsxs(View, {\n    style: {\n      backgroundColor: 'white',\n      height: '100%'\n    },\n    children: [_jsxs(View, {\n      style: styles.search,\n      children: [_jsx(Text, {\n        style: styles.text,\n        children: \"Find your room or house to rent\"\n      }), _jsxs(View, {\n        style: styles.inputView,\n        children: [myIcon, _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Search Location\",\n          onChangeText: function onChangeText(input) {\n            searchName(input);\n          }\n        })]\n      })]\n    }), _jsx(CategoryList, {}), _jsx(Animated.FlatList, {\n      data: dataState,\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item,\n            index = _ref3.index;\n        return _jsx(Card, {\n          hotel: item,\n          index: index\n        });\n      },\n      keyExtractor: function keyExtractor(item, index) {\n        return index.toString();\n      }\n    })]\n  });\n};\n\nexport default DisplayRoom;","map":{"version":3,"sources":["C:/Users/codetribe/Documents/GitHub/moveapp/awesomeproject/src/screen/DisplayRoom/index.js"],"names":["React","useState","useEffect","styles","Iconi","hotels","Icon","useNavigation","Dimensions","get","width","cardWidth","myIcon","DisplayRoom","navigation","categories","selectedCategoryIndex","setSelectedCategoryIndex","activeCardIndex","setActiveCardIndex","scrollX","useRef","Animated","Value","current","CategoryList","categoryListContainer","map","item","index","categoryListText","color","height","backgroundColor","marginTop","Card","hotel","navigate","card","priceTag","fontSize","fontWeight","price","image","cardImage","cardDetails","flexDirection","justifyContent","name","location","type","dataState","setData","searchName","input","data","searchData","filter","toLowerCase","includes","search","text","inputView","toString"],"mappings":"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","sourcesContent":["import { View, Text,TextInput,TouchableOpacity,Image,Animated, Dimensions,\r\n    FlatList,\r\n    SafeAreaView,\r\n    ScrollView } from 'react-native'\r\n  import React,{useState, useEffect} from 'react'\r\n  import styles from './styles'\r\n  import Iconi from 'react-native-vector-icons/Feather';\r\n  import hotels from '../../assets/data/hotels';\r\n  import Icon from 'react-native-vector-icons/MaterialIcons';\r\n  import { useNavigation } from '@react-navigation/native';\r\n\r\n  const {width} = Dimensions.get('screen');\r\n  const cardWidth = width ;\r\n  \r\n  const myIcon = <Iconi name=\"search\" size={30} color=\"#AAAAAA\" />;\r\n  \r\n  const DisplayRoom = () => {\r\n    const navigation = useNavigation();\r\n\r\n    const categories = ['All', 'Single', 'Family', 'Sharing'];\r\n    const [selectedCategoryIndex, setSelectedCategoryIndex] = React.useState(0);\r\n    const [activeCardIndex, setActiveCardIndex] = React.useState(0);\r\n    const scrollX = React.useRef(new Animated.Value(0)).current;\r\n  \r\n\r\n    \r\n\r\n    const CategoryList = ({navigation}) => {\r\n      return (\r\n        <View style={styles.categoryListContainer}>\r\n          {categories.map((item, index) => (\r\n            <TouchableOpacity\r\n              key={index}\r\n              activeOpacity={0.8}\r\n              onPress={() => setSelectedCategoryIndex(index)}\r\n              >\r\n              <View>\r\n                <Text\r\n                \r\n                style={{\r\n                  ...styles.categoryListText,\r\n                  color:\r\n                    selectedCategoryIndex == index\r\n                      ? '#eee'\r\n                      : 'black'\r\n                }}\r\n                \r\n                >\r\n                  {item}\r\n                </Text>\r\n                \r\n        \r\n                {selectedCategoryIndex == index && (\r\n                  <View\r\n                    style={{\r\n                      height: 3,\r\n                      width: 30,\r\n                      backgroundColor: '#eee',\r\n                      marginTop: 2,\r\n                    }}\r\n                  />\r\n                \r\n                )}\r\n  \r\n              </View>\r\n            </TouchableOpacity>\r\n          ))}\r\n        </View>\r\n      );\r\n    };\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n    const Card = ({hotel, index,}) => {\r\n    \r\n       return (\r\n        <TouchableOpacity\r\n        onPress={() => navigation.navigate('RoomDetails', hotel)}\r\n       >\r\n     <Animated.View style={styles.card}>\r\n\r\n  <View style={styles.priceTag}>\r\n              <Text\r\n                style={{color: \"#eee\", fontSize: 20, fontWeight: 'bold'}}>\r\n                R{hotel.price}\r\n              </Text>\r\n            </View>\r\n  \r\n         <Image source={hotel.image} style={styles.cardImage} />\r\n  \r\n  \r\n  \r\n         <View style={styles.cardDetails}>\r\n              <View\r\n                style={{flexDirection: 'row', justifyContent: 'space-between'}}>\r\n                <View>\r\n                  <Text style={{fontWeight: 'bold', fontSize: 17}}>\r\n                    {hotel.name}\r\n                  </Text>\r\n                  <Text style={{color:'grey', fontSize: 12}}>\r\n                    {hotel.location}\r\n                  </Text>\r\n                </View>\r\n                <Icon name=\"bookmark-border\" size={26} color={\"black\"} />\r\n              </View>\r\n              <Text style={{fontSize: 11, color:'black'}}>{hotel.type} </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: 'row',\r\n                  justifyContent: 'space-between',\r\n                  marginTop: 10,\r\n                }}>\r\n                <View style={{flexDirection: 'row'}}>\r\n                  <Icon name=\"star\" size={15} color='orange' />\r\n                  <Icon name=\"star\" size={15} color='orange' />\r\n                  <Icon name=\"star\" size={15} color='orange' />\r\n                  <Icon name=\"star\" size={15} color='orange' />\r\n                  <Icon name=\"star\" size={15} color='grey' />\r\n                </View>\r\n                <Text style={{fontSize: 10, color:'grey'}}>365 reviews</Text>\r\n              </View>\r\n            </View>\r\n     </Animated.View>\r\n     </TouchableOpacity>\r\n       \r\n      );\r\n    };\r\n  \r\n  \r\n  \r\n    const [dataState,setData] = useState(hotels)\r\n\r\n    const searchName =(input)=>{\r\n\r\n      let data = dataState\r\n      let searchData = data.filter((item)=>{\r\n        return item.location.toLowerCase().includes(input.toLowerCase())\r\n      });\r\n\r\n{ input?\r\n  setData(searchData):\r\n  setData(hotels)\r\n}\r\n  }\r\n    \r\n\r\n  \r\n  \r\n  \r\n  \r\n    return (\r\n      <View style={{backgroundColor:'white',height:'100%'}}>\r\n          <View style={styles.search}>\r\n          <Text style={styles.text}>Find your room or house to rent</Text>\r\n          <View style={styles.inputView}>\r\n        \r\n  {myIcon}\r\n  <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Search Location\"\r\n          onChangeText={(input)=>{\r\n            searchName(input)\r\n          }}\r\n    \r\n        />\r\n          </View>\r\n          </View>\r\n          <CategoryList />\r\n     \r\n\r\n         \r\n            <Animated.FlatList\r\n            data={dataState}\r\n              renderItem={({item, index}) => <Card hotel={item} index={index} />}\r\n              keyExtractor={(item, index) =>index.toString()} \r\n            />\r\n          \r\n       \r\n      </View>\r\n    )\r\n  }\r\n  \r\n  export default DisplayRoom;"]},"metadata":{},"sourceType":"module"}