{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"containerStyle\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Composer from \"./Composer\";\nimport Send from \"./Send\";\nimport Actions from \"./Actions\";\nimport Color from \"./Color\";\nimport { StylePropType } from \"./utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    borderTopWidth: StyleSheet.hairlineWidth,\n    borderTopColor: Color.defaultColor,\n    backgroundColor: Color.white,\n    bottom: 0,\n    left: 0,\n    right: 0\n  },\n  primary: {\n    flexDirection: 'row',\n    alignItems: 'flex-end'\n  },\n  accessory: {\n    height: 44\n  }\n});\n\nvar InputToolbar = function (_React$Component) {\n  _inherits(InputToolbar, _React$Component);\n\n  var _super = _createSuper(InputToolbar);\n\n  function InputToolbar() {\n    var _this;\n\n    _classCallCheck(this, InputToolbar);\n\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      position: 'absolute'\n    };\n    _this.keyboardWillShowListener = undefined;\n    _this.keyboardWillHideListener = undefined;\n\n    _this.keyboardWillShow = function () {\n      if (_this.state.position !== 'relative') {\n        _this.setState({\n          position: 'relative'\n        });\n      }\n    };\n\n    _this.keyboardWillHide = function () {\n      if (_this.state.position !== 'absolute') {\n        _this.setState({\n          position: 'absolute'\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(InputToolbar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.keyboardWillShowListener = Keyboard.addListener('keyboardWillShow', this.keyboardWillShow);\n      this.keyboardWillHideListener = Keyboard.addListener('keyboardWillHide', this.keyboardWillHide);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.keyboardWillShowListener) {\n        this.keyboardWillShowListener.remove();\n      }\n\n      if (this.keyboardWillHideListener) {\n        this.keyboardWillHideListener.remove();\n      }\n    }\n  }, {\n    key: \"renderActions\",\n    value: function renderActions() {\n      var _this$props = this.props,\n          containerStyle = _this$props.containerStyle,\n          props = _objectWithoutProperties(_this$props, _excluded);\n\n      if (this.props.renderActions) {\n        return this.props.renderActions(props);\n      } else if (this.props.onPressActionButton) {\n        return _jsx(Actions, _objectSpread({}, props));\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderSend\",\n    value: function renderSend() {\n      if (this.props.renderSend) {\n        return this.props.renderSend(this.props);\n      }\n\n      return _jsx(Send, _objectSpread({}, this.props));\n    }\n  }, {\n    key: \"renderComposer\",\n    value: function renderComposer() {\n      if (this.props.renderComposer) {\n        return this.props.renderComposer(this.props);\n      }\n\n      return _jsx(Composer, _objectSpread({}, this.props));\n    }\n  }, {\n    key: \"renderAccessory\",\n    value: function renderAccessory() {\n      if (this.props.renderAccessory) {\n        return _jsx(View, {\n          style: [styles.accessory, this.props.accessoryStyle],\n          children: this.props.renderAccessory(this.props)\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsxs(View, {\n        style: [styles.container, {\n          position: this.state.position\n        }, this.props.containerStyle],\n        children: [_jsxs(View, {\n          style: [styles.primary, this.props.primaryStyle],\n          children: [this.renderActions(), this.renderComposer(), this.renderSend()]\n        }), this.renderAccessory()]\n      });\n    }\n  }]);\n\n  return InputToolbar;\n}(React.Component);\n\nexport { InputToolbar as default };\nInputToolbar.defaultProps = {\n  renderAccessory: null,\n  renderActions: null,\n  renderSend: null,\n  renderComposer: null,\n  containerStyle: {},\n  primaryStyle: {},\n  accessoryStyle: {},\n  onPressActionButton: function onPressActionButton() {}\n};\nInputToolbar.propTypes = {\n  renderAccessory: PropTypes.func,\n  renderActions: PropTypes.func,\n  renderSend: PropTypes.func,\n  renderComposer: PropTypes.func,\n  onPressActionButton: PropTypes.func,\n  containerStyle: StylePropType,\n  primaryStyle: StylePropType,\n  accessoryStyle: StylePropType\n};","map":{"version":3,"sources":["../src/InputToolbar.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { StyleSheet, View, Keyboard, } from 'react-native';\r\nimport Composer from './Composer';\r\nimport Send from './Send';\r\nimport Actions from './Actions';\r\nimport Color from './Color';\r\nimport { StylePropType } from './utils';\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        borderTopWidth: StyleSheet.hairlineWidth,\r\n        borderTopColor: Color.defaultColor,\r\n        backgroundColor: Color.white,\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0,\r\n    },\r\n    primary: {\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-end',\r\n    },\r\n    accessory: {\r\n        height: 44,\r\n    },\r\n});\r\nexport default class InputToolbar extends React.Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.state = {\r\n            position: 'absolute',\r\n        };\r\n        this.keyboardWillShowListener = undefined;\r\n        this.keyboardWillHideListener = undefined;\r\n        this.keyboardWillShow = () => {\r\n            if (this.state.position !== 'relative') {\r\n                this.setState({\r\n                    position: 'relative',\r\n                });\r\n            }\r\n        };\r\n        this.keyboardWillHide = () => {\r\n            if (this.state.position !== 'absolute') {\r\n                this.setState({\r\n                    position: 'absolute',\r\n                });\r\n            }\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.keyboardWillShowListener = Keyboard.addListener('keyboardWillShow', this.keyboardWillShow);\r\n        this.keyboardWillHideListener = Keyboard.addListener('keyboardWillHide', this.keyboardWillHide);\r\n    }\r\n    componentWillUnmount() {\r\n        if (this.keyboardWillShowListener) {\r\n            this.keyboardWillShowListener.remove();\r\n        }\r\n        if (this.keyboardWillHideListener) {\r\n            this.keyboardWillHideListener.remove();\r\n        }\r\n    }\r\n    renderActions() {\r\n        const { containerStyle, ...props } = this.props;\r\n        if (this.props.renderActions) {\r\n            return this.props.renderActions(props);\r\n        }\r\n        else if (this.props.onPressActionButton) {\r\n            return <Actions {...props}/>;\r\n        }\r\n        return null;\r\n    }\r\n    renderSend() {\r\n        if (this.props.renderSend) {\r\n            return this.props.renderSend(this.props);\r\n        }\r\n        return <Send {...this.props}/>;\r\n    }\r\n    renderComposer() {\r\n        if (this.props.renderComposer) {\r\n            return this.props.renderComposer(this.props);\r\n        }\r\n        return <Composer {...this.props}/>;\r\n    }\r\n    renderAccessory() {\r\n        if (this.props.renderAccessory) {\r\n            return (<View style={[styles.accessory, this.props.accessoryStyle]}>\r\n          {this.props.renderAccessory(this.props)}\r\n        </View>);\r\n        }\r\n        return null;\r\n    }\r\n    render() {\r\n        return (<View style={[\r\n            styles.container,\r\n            { position: this.state.position },\r\n            this.props.containerStyle,\r\n        ]}>\r\n        <View style={[styles.primary, this.props.primaryStyle]}>\r\n          {this.renderActions()}\r\n          {this.renderComposer()}\r\n          {this.renderSend()}\r\n        </View>\r\n        {this.renderAccessory()}\r\n      </View>);\r\n    }\r\n}\r\nInputToolbar.defaultProps = {\r\n    renderAccessory: null,\r\n    renderActions: null,\r\n    renderSend: null,\r\n    renderComposer: null,\r\n    containerStyle: {},\r\n    primaryStyle: {},\r\n    accessoryStyle: {},\r\n    onPressActionButton: () => { },\r\n};\r\nInputToolbar.propTypes = {\r\n    renderAccessory: PropTypes.func,\r\n    renderActions: PropTypes.func,\r\n    renderSend: PropTypes.func,\r\n    renderComposer: PropTypes.func,\r\n    onPressActionButton: PropTypes.func,\r\n    containerStyle: StylePropType,\r\n    primaryStyle: StylePropType,\r\n    accessoryStyle: StylePropType,\r\n};\r\n//# sourceMappingURL=InputToolbar.js.map"]},"metadata":{},"sourceType":"module"}