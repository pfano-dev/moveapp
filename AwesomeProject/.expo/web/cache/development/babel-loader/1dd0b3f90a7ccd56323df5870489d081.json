{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Color from \"./Color\";\nimport { StylePropType } from \"./utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Actions = function (_React$Component) {\n  _inherits(Actions, _React$Component);\n\n  var _super = _createSuper(Actions);\n\n  function Actions() {\n    var _this;\n\n    _classCallCheck(this, Actions);\n\n    _this = _super.apply(this, arguments);\n\n    _this.onActionsPress = function () {\n      var options = _this.props.options;\n      var optionKeys = Object.keys(options);\n      var cancelButtonIndex = optionKeys.indexOf('Cancel');\n\n      _this.context.actionSheet().showActionSheetWithOptions({\n        options: optionKeys,\n        cancelButtonIndex: cancelButtonIndex,\n        tintColor: _this.props.optionTintColor\n      }, function (buttonIndex) {\n        var key = optionKeys[buttonIndex];\n\n        if (key) {\n          options[key](_this.props);\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Actions, [{\n    key: \"renderIcon\",\n    value: function renderIcon() {\n      if (this.props.icon) {\n        return this.props.icon();\n      }\n\n      return _jsx(View, {\n        style: [styles.wrapper, this.props.wrapperStyle],\n        children: _jsx(Text, {\n          style: [styles.iconText, this.props.iconTextStyle],\n          children: \"+\"\n        })\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsx(TouchableOpacity, {\n        style: [styles.container, this.props.containerStyle],\n        onPress: this.props.onPressActionButton || this.onActionsPress,\n        children: this.renderIcon()\n      });\n    }\n  }]);\n\n  return Actions;\n}(React.Component);\n\nexport { Actions as default };\nActions.defaultProps = {\n  options: {},\n  optionTintColor: Color.optionTintColor,\n  icon: undefined,\n  containerStyle: {},\n  iconTextStyle: {},\n  wrapperStyle: {}\n};\nActions.propTypes = {\n  onSend: PropTypes.func,\n  options: PropTypes.object,\n  optionTintColor: PropTypes.string,\n  icon: PropTypes.func,\n  onPressActionButton: PropTypes.func,\n  wrapperStyle: StylePropType,\n  containerStyle: StylePropType\n};\nActions.contextTypes = {\n  actionSheet: PropTypes.func\n};\nvar styles = StyleSheet.create({\n  container: {\n    width: 26,\n    height: 26,\n    marginLeft: 10,\n    marginBottom: 10\n  },\n  wrapper: {\n    borderRadius: 13,\n    borderColor: Color.defaultColor,\n    borderWidth: 2,\n    flex: 1\n  },\n  iconText: {\n    color: Color.defaultColor,\n    fontWeight: 'bold',\n    fontSize: 16,\n    backgroundColor: Color.backgroundTransparent,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["../src/Actions.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { StyleSheet, Text, TouchableOpacity, View, } from 'react-native';\r\nimport Color from './Color';\r\nimport { StylePropType } from './utils';\r\nexport default class Actions extends React.Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.onActionsPress = () => {\r\n            const { options } = this.props;\r\n            const optionKeys = Object.keys(options);\r\n            const cancelButtonIndex = optionKeys.indexOf('Cancel');\r\n            this.context.actionSheet().showActionSheetWithOptions({\r\n                options: optionKeys,\r\n                cancelButtonIndex,\r\n                tintColor: this.props.optionTintColor,\r\n            }, (buttonIndex) => {\r\n                const key = optionKeys[buttonIndex];\r\n                if (key) {\r\n                    options[key](this.props);\r\n                }\r\n            });\r\n        };\r\n    }\r\n    renderIcon() {\r\n        if (this.props.icon) {\r\n            return this.props.icon();\r\n        }\r\n        return (<View style={[styles.wrapper, this.props.wrapperStyle]}>\r\n        <Text style={[styles.iconText, this.props.iconTextStyle]}>+</Text>\r\n      </View>);\r\n    }\r\n    render() {\r\n        return (<TouchableOpacity style={[styles.container, this.props.containerStyle]} onPress={this.props.onPressActionButton || this.onActionsPress}>\r\n        {this.renderIcon()}\r\n      </TouchableOpacity>);\r\n    }\r\n}\r\nActions.defaultProps = {\r\n    options: {},\r\n    optionTintColor: Color.optionTintColor,\r\n    icon: undefined,\r\n    containerStyle: {},\r\n    iconTextStyle: {},\r\n    wrapperStyle: {},\r\n};\r\nActions.propTypes = {\r\n    onSend: PropTypes.func,\r\n    options: PropTypes.object,\r\n    optionTintColor: PropTypes.string,\r\n    icon: PropTypes.func,\r\n    onPressActionButton: PropTypes.func,\r\n    wrapperStyle: StylePropType,\r\n    containerStyle: StylePropType,\r\n};\r\nActions.contextTypes = {\r\n    actionSheet: PropTypes.func,\r\n};\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        width: 26,\r\n        height: 26,\r\n        marginLeft: 10,\r\n        marginBottom: 10,\r\n    },\r\n    wrapper: {\r\n        borderRadius: 13,\r\n        borderColor: Color.defaultColor,\r\n        borderWidth: 2,\r\n        flex: 1,\r\n    },\r\n    iconText: {\r\n        color: Color.defaultColor,\r\n        fontWeight: 'bold',\r\n        fontSize: 16,\r\n        backgroundColor: Color.backgroundTransparent,\r\n        textAlign: 'center',\r\n    },\r\n});\r\n//# sourceMappingURL=Actions.js.map"]},"metadata":{},"sourceType":"module"}