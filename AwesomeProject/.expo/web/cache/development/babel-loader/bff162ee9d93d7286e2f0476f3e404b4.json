{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport React from 'react';\nimport Ionicons from \"@expo/vector-icons/MaterialIcons\";\nimport styles from \"./styles\";\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { Auth, API, graphqlOperation } from 'aws-amplify';\nimport { createNow } from \"../../graphql/mutations\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Payment = function Payment(_ref) {\n  var navigation = _ref.navigation;\n  var route = useRoute();\n  var data = route.params;\n  var types = data.data;\n  var typ = types.type;\n  var destLat = types.destinationLoc.latitude;\n  var destLon = types.destinationLoc.latitude;\n  var oriLat = types.destinationLoc.latitude;\n  var oriLon = types.destinationLoc.latitude;\n  var origin = types.origins;\n  var destination = types.destinations;\n  var prices = data.distances;\n  var car = typ.type;\n  console.log(typ.type);\n\n  var onSubmit = function onSubmit() {\n    var user, date, input, response;\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Auth.currentAuthenticatedUser());\n\n          case 3:\n            user = _context.sent;\n            date = new Date();\n            input = {\n              id: user.attributes.sub,\n              name: user.username,\n              destinationLat: destLat,\n              destinationLong: destLon,\n              originLat: oriLat,\n              originLong: oriLat,\n              destinations: destination,\n              origins: origin,\n              price: prices,\n              type: car\n            };\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createNow, {\n              input: input\n            })));\n\n          case 8:\n            response = _context.sent;\n            console.log(response);\n            navigation.navigate('Now');\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 13]], Promise);\n  };\n\n  return _jsx(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    style: styles.containers,\n    children: _jsx(TouchableWithoutFeedback, {\n      onPress: Keyboard.dismiss,\n      children: _jsxs(View, {\n        style: styles.inner,\n        children: [_jsxs(View, {\n          style: styles.container,\n          children: [_jsxs(View, {\n            children: [_jsx(Text, {\n              style: styles.text,\n              children: \"Total Price\"\n            }), _jsxs(Text, {\n              style: styles.textP,\n              children: [\"R\", data.distances + 2, \",00\"]\n            })]\n          }), _jsxs(TouchableOpacity, {\n            onPress: function onPress() {\n              return nav();\n            },\n            style: {\n              flexDirection: \"row\",\n              alignItems: 'center'\n            },\n            children: [_jsx(Ionicons, {\n              name: 'money',\n              size: 20,\n              color: 'gray'\n            }), _jsx(Text, {\n              style: {\n                fontSize: 20,\n                fontWeight: 'bold'\n              },\n              children: \"Use Cash\"\n            }), _jsx(Icon, {\n              name: \"keyboard-arrow-right\",\n              size: 30,\n              color: \"gray\"\n            })]\n          })]\n        }), _jsxs(ScrollView, {\n          children: [_jsx(View, {\n            children: _jsx(Image, {\n              style: styles.image,\n              source: require(\"../../assets/images/bankcard.jpg\")\n            })\n          }), _jsxs(View, {\n            style: {\n              paddingHorizontal: 10\n            },\n            children: [_jsx(Text, {\n              style: styles.tex,\n              children: \"Card number\"\n            }), _jsx(TextInput, {\n              placeholder: \"5568 4528 4584 4896\",\n              style: styles.textInput,\n              maxLength: 16,\n              keyboardType: \"numeric\"\n            }), _jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                justifyContent: 'space-around',\n                marginVertical: 15\n              },\n              children: [_jsxs(View, {\n                children: [_jsx(Text, {\n                  style: styles.tex,\n                  children: \"Valid until\"\n                }), _jsx(TextInput, {\n                  placeholder: \"months/year\",\n                  style: [styles.textInput, {\n                    padding: 10\n                  }],\n                  maxLength: 5\n                })]\n              }), _jsxs(View, {\n                children: [_jsx(Text, {\n                  style: styles.tex,\n                  children: \"CCV\"\n                }), _jsx(TextInput, {\n                  placeholder: \"* * *\",\n                  style: [styles.textInput, {\n                    padding: 10,\n                    width: 100\n                  }],\n                  maxLength: 3,\n                  keyboardType: \"numeric\"\n                })]\n              })]\n            }), _jsx(Text, {\n              style: styles.tex,\n              children: \"Card holder\"\n            }), _jsx(TextInput, {\n              placeholder: \"Username\",\n              style: styles.textInput\n            })]\n          }), _jsx(View, {\n            style: styles.btnView,\n            children: _jsx(TouchableOpacity, {\n              style: styles.btn,\n              onPress: onSubmit,\n              children: _jsx(Text, {\n                style: styles.btnText,\n                children: \"make Payment\"\n              })\n            })\n          })]\n        })]\n      })\n    })\n  });\n};\n\nexport default Payment;","map":{"version":3,"sources":["C:/Users/codetribe/Documents/GitHub/moveapp/awesomeproject/src/screen/Payment/index.js"],"names":["React","Ionicons","styles","Icon","useRoute","Auth","API","graphqlOperation","createNow","Payment","navigation","route","data","params","types","typ","type","destLat","destinationLoc","latitude","destLon","oriLat","oriLon","origin","origins","destination","destinations","prices","distances","car","console","log","onSubmit","currentAuthenticatedUser","user","date","Date","input","id","attributes","sub","name","username","destinationLat","destinationLong","originLat","originLong","price","graphql","response","navigate","error","Platform","OS","containers","Keyboard","dismiss","inner","container","text","textP","nav","flexDirection","alignItems","fontSize","fontWeight","image","require","paddingHorizontal","tex","textInput","justifyContent","marginVertical","padding","width","btnView","btn","btnText"],"mappings":"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","sourcesContent":["import { View, TouchableOpacity, Text, Image, Platform, TouchableWithoutFeedback, Button, Keyboard, KeyboardAvoidingView,\r\n   TextInput, ScrollView } from 'react-native'\r\nimport React from 'react'\r\nimport Ionicons from \"react-native-vector-icons/MaterialIcons\";\r\nimport styles from './styles';\r\nimport Icon from 'react-native-vector-icons/MaterialIcons';\r\nimport { useRoute } from \"@react-navigation/native\";\r\nimport { Auth, API, graphqlOperation} from 'aws-amplify';\r\nimport {createNow} from '../../graphql/mutations';\r\n\r\n\r\n\r\nconst Payment = ({navigation}) => {\r\n\r\n  const route = useRoute();\r\n\r\n  const data = route.params;\r\n\r\n  const types = data.data;\r\n  const typ=types.type\r\n\r\n\r\n  const destLat =types.destinationLoc.latitude\r\n  const destLon =types.destinationLoc.latitude\r\n\r\n  const oriLat =types.destinationLoc.latitude\r\n  const oriLon =types.destinationLoc.latitude\r\n\r\n  const origin =types.origins\r\n  const destination =types.destinations\r\n  const prices = data.distances;\r\n  const car = typ.type\r\n  console.log(typ.type)\r\n\r\n\r\n\r\n\r\n  // const nav = () => {\r\n  //   types.date\r\n  //   ? handleSubmit() \r\n  //   : handleSubmit()\r\n  // }\r\n\r\n\r\n\r\n//   const handleSubmit = async () => {\r\n//     // Saving product details\r\n\r\n\r\n//     try {\r\n//       const user = await Auth.currentAuthenticatedUser();\r\n//       const input = {\r\n//         id:user.attributes.sub,\r\n//         name:user.username,\r\n//         destinationLat:destLat,\r\n//         destinationLong: destLon,\r\n//         originLat:oriLat,\r\n//         originLong:oriLat,\r\n//         destinations:destination ,\r\n//         origins: origin,\r\n//         price:prices, \r\n//         type:car\r\n     \r\n//       }\r\n\r\n// const response = await API.graphql(\r\n//         graphqlOperation(createNow, {\r\n//           input:input,\r\n         \r\n//         }),\r\n//       );\r\n//       console.log('Response :\\n');\r\n//       console.log(response);\r\n//     } catch (e) {\r\n//       console.log(e.message);\r\n//     }\r\n\r\n//     console.log('pressed')\r\n//   };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const onSubmit = async () => {\r\n \r\n\r\n    // submit to server\r\n    try {\r\n      const user = await Auth.currentAuthenticatedUser();\r\n\r\n      const date = new Date();\r\n      const input = {\r\n        id:user.attributes.sub,\r\n        name:user.username,\r\n        destinationLat:destLat,\r\n        destinationLong: destLon,\r\n        originLat:oriLat,\r\n        originLong:oriLat,\r\n        destinations:destination ,\r\n        origins: origin,\r\n        price:prices, \r\n        type:car\r\n      }\r\n\r\n      const response = await API.graphql(\r\n        graphqlOperation(\r\n          createNow, {\r\n            input: input\r\n          },\r\n        )\r\n      )\r\n\r\n      console.log(response);\r\n\r\n      navigation.navigate('Now');\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <KeyboardAvoidingView\r\n    behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n    style={styles.containers}\r\n  >\r\n      <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n      <View style={styles.inner}>\r\n  <View style={styles.container}>\r\n    <View>\r\n    <Text style={styles.text}>Total Price</Text>\r\n    <Text style={styles.textP}>R{data.distances+2},00</Text>\r\n    </View>\r\n    <TouchableOpacity \r\n        onPress={() => nav()}\r\n    style={{flexDirection:\"row\",alignItems:'center'}}>\r\n    <Ionicons name={'money'} size={20} color={'gray'} />\r\n<Text style={{fontSize:20, fontWeight:'bold'}}>Use Cash</Text>\r\n<Icon name=\"keyboard-arrow-right\" size={30} color=\"gray\"/>\r\n    </TouchableOpacity>\r\n \r\n  </View>\r\n  <ScrollView>\r\n  <View>\r\n  <Image\r\n\r\nstyle={styles.image}\r\n       source={require('../../assets/images/bankcard.jpg')}\r\n/>\r\n  </View>\r\n\r\n<View style={{paddingHorizontal:10}}>\r\n  <Text style={styles.tex}>Card number</Text>\r\n         <TextInput placeholder=\"5568 4528 4584 4896\" style={styles.textInput}  maxLength={16} keyboardType = 'numeric'/>\r\n          <View style={{flexDirection:'row',justifyContent:'space-around', marginVertical:15}}>\r\n            <View>\r\n            <Text style={styles.tex}>Valid until</Text>\r\n            <TextInput placeholder=\"months/year\" style={[styles.textInput,{padding:10, }]}  maxLength={5}/>\r\n            </View>\r\n    <View>\r\n    <Text style={styles.tex}>CCV</Text>\r\n    <TextInput placeholder=\"* * *\" style={[styles.textInput,{padding:10,width:100}]} maxLength={3} keyboardType = 'numeric'/>\r\n    </View>\r\n         \r\n          </View>\r\n          <Text style={styles.tex}>Card holder</Text>\r\n          <TextInput placeholder=\"Username\" style={styles.textInput}  />\r\n \r\n</View>\r\n         \r\n\r\n          <View style={styles.btnView}>\r\n          <TouchableOpacity style={styles.btn}\r\n            onPress={onSubmit}\r\n          >\r\n       \r\n            <Text style={styles.btnText}>make Payment</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n  </ScrollView>\r\n\r\n\r\n\r\n          </View>\r\n  </TouchableWithoutFeedback>\r\n  </KeyboardAvoidingView>\r\n  )\r\n}\r\n\r\nexport default Payment"]},"metadata":{},"sourceType":"module"}